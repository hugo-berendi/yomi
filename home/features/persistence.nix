{config, ...}: {
  # {{{ Set up my custom imperanence wrapper
  yomi.persistence = {
    enable = true;

    # Actual data/media (eg: projects, images, videos, etc)
    at.data.path = "/persist/data";
    at.data.prefixDirectories = false;

    # App state I want to keep
    at.state.path = "/persist/state";

    # App state which I should be able to delete on a whim
    at.cache.path = "/persist/local/cache";
  };
  # }}}
  # {{{ XDG dirs
  # The lack of "~/Desktop" and "~/Downloads" is intentional!
  yomi.persistence.at.data.apps.main.directories = [
    config.xdg.userDirs.documents
    config.xdg.userDirs.pictures
    config.xdg.userDirs.music
    config.xdg.userDirs.videos
    config.xdg.userDirs.extraConfig.XDG_PROJECTS_DIR
    config.xdg.userDirs.extraConfig.XDG_BOOKS_DIR
  ];
  # }}}
  # {{{ OpenTabletDriver
  # yomi.persistence.at.state.apps.open-tablet-driver.directories = [
  #   "${config.xdg.configHome}/OpenTabletDriver"
  # ];
  # }}}
  # {{{ yubikey
  yomi.persistence.at.state.apps.yubico.directories = ["${config.home.homeDirectory}/.yubico"];
  # }}}
  # {{{ Programming tooling
  # {{{ Elm
  # yomi.persistence.at.cache.apps.elm.directories = [".elm"];
  # }}}
  # {{{ Fly.io
  # yomi.persistence.at.state.apps.fly-io.directories = [".fly"];
  # }}}
  # {{{ Haskell
  # yomi.persistence.at.cache.apps.haskell.directories = [
  #   ".ghc"
  #   ".stack"
  #   ".local/state/cabal"
  #   "${config.xdg.cacheHome}/stack"
  #   "${config.xdg.cacheHome}/ghcide"
  #   "${config.xdg.cacheHome}/cabal"
  # ];
  # }}}
  # {{{ Nodejs
  yomi.persistence.at.cache.apps.nodejs = {
    files = [
      # ".yarnrc" # auto-generated by yarn
      ".node_repl_history"
      # ".ts_node_repl_history"
    ];

    directories = [
      # Node & npm
      "${config.xdg.cacheHome}/node-gyp"
      ".npm"

      # Yarn
      "${config.xdg.cacheHome}/yarn"

      # Pnpm
      "${config.xdg.cacheHome}/pnpm"
      "${config.xdg.dataHome}/pnpm"
      ".local/state/pnpm"
    ];
  };
  # }}}
  # {{{ Purescript
  yomi.persistence.at.cache.apps.purescript.directories = [
    "${config.xdg.dataHome}/purescript"
    "${config.xdg.cacheHome}/spago"
  ];
  # }}}
  # {{{ Python
  yomi.persistence.at.cache.apps.python = {
    files = [
      ".python_history"
    ];

    directories = [
      ".ipython"
      ".jupyter"
      "${config.xdg.dataHome}/jupyter"
      "${config.xdg.cacheHome}/pip"
    ];
  };
  # }}}
  # {{{ Rust
  yomi.persistence.at.cache.apps.rust.directories = [
    ".cargo"
    ".rustup"
  ];
  # }}}
  # }}}
  # {{{ Desktop apps
  # {{{ QBittorrent
  yomi.persistence.at.state.apps.qbittorrent.directories = [
    "${config.xdg.configHome}/qBittorrent" # Config options
  ];

  yomi.persistence.at.cache.apps.qbittorrent.directories = [
    # TODO: investigate which subdirectories/files I actually want to keep
    "${config.xdg.dataHome}/qBittorrent" # Torrent files, logs, etc
  ];
  # }}}
  # {{{ Signal
  yomi.persistence.at.state.apps.signal.directories = [
    "${config.xdg.configHome}/Signal" # Why tf does signal store it's state here ðŸ’€
  ];
  # }}}
  # {{{ Lutris
  # TODO: there might be more to cache in .cache/lutris
  yomi.persistence.at.state.apps.lutris.directories = [
    "${config.xdg.configHome}/lutris" # General config data
    "${config.xdg.cacheHome}/lutris/banners" # Game banners
    "${config.xdg.cacheHome}/lutris/coverart" # Game cover art

    # Aparently IO intensive stuff like games prefer symlinks?
    {
      directory = "media/games/lutris";
      method = "symlink";
    } # Lutris games
  ];
  # }}}
  # {{{ Wine
  yomi.persistence.at.state.apps.wine.directories = [".wine"];
  # }}}
  # {{{ Element
  yomi.persistence.at.state.apps.element.directories = [
    "${config.xdg.configHome}/Element"
  ];
  # }}}
  # {{{ Bitwarden
  yomi.persistence.at.state.apps.bitwarden.directories = [
    "${config.xdg.configHome}/Bitwarden"
  ];
  # }}}
  # {{{ Cli
  # {{{ Sops
  yomi.persistence.at.state.apps.sops.directories = ["${config.xdg.configHome}/sops/age"];
  # }}}
  # }}}
}
